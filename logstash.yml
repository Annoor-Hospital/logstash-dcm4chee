input {
  gelf {
    type => "wildfly"
  }
  udp {
    port => 8514
    type => "syslog"
  }
  tcp {
    port => 8514
    codec => "frame"
    type => "syslog"
  }
}

filter {
  if [type] == "wildfly" {
    mutate {
      rename => { "[mdc][activemq.broker]" => "activemq_broker" }
    }
  }
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>1 %{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program} %{POSINT:syslog_pid} %{DATA:syslog_msgid} - (\xEF\xBB\xBF)?%{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    xml {
      source => "message"
      target => "audit"
      xpath => [
        "/AuditMessage/EventIdentification", "event",
        "/AuditMessage/EventIdentification/EventID", "event-id",
        "/AuditMessage/EventIdentification/EventTypeCode[1]", "event-type-code",
        "/AuditMessage/AuditSourceIdentification[1]", "audit-source",
        "/AuditMessage/AuditSourceIdentification[2]", "audit-source2",
        "/AuditMessage/ActiveParticipant[@UserIsRequestor='true'][1]", "requestor",
        "/AuditMessage/ActiveParticipant[@UserIsRequestor='true'][2]", "requestor2",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110150'][1]", "application",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110151'][1]", "application-launcher",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110152'][1]", "destination",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110152'][2]", "destination2",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110153'][1]", "source",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110153'][2]", "source2",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110154'][1]", "destination-media",
        "/AuditMessage/ActiveParticipant[RoleIDCode/@csd-code='110155'][1]", "source-media",
        "/AuditMessage/ParticipantObjectIdentification[ParticipantObjectIDTypeCode/@csd-code='110180'][1]", "study"
      ]
    }
    if [event] {
      xml {
        source => "event"
        target => "EventIdentification"
        remove_field => [ "event" ]
      }
    }
    if [event-id] {
      xml {
        source => "event-id"
        target => "EventID"
        remove_field => [ "event-id" ]
      }
    }
    if [event-type-code] {
      xml {
        source => "event-type-code"
        target => "EventTypeCode"
        remove_field => [ "event-type-code" ]
      }
    }
    if [audit-source] {
      xml {
        source => "audit-source"
        target => "AuditSource"
        remove_field => [ "audit-source" ]
      }
    }
    if [requestor] {
      xml {
        source => "requestor"
        target => "ActiveParticipantRequestor"
        remove_field => [ "requestor" ]
      }
    }
    if [application] {
      xml {
        source => "application"
        target => "ActiveParticipantApplication"
        remove_field => [ "application" ]
      }
    }
    if [application-launcher] {
      xml {
        source => "application-launcher"
        target => "ActiveParticipantApplicationLauncher"
        remove_field => [ "application-launcher" ]
      }
    }
    if [destination] {
      xml {
        source => "destination"
        target => "ActiveParticipantDestination"
        remove_field => [ "destination" ]
      }
    }
    if [source] {
      xml {
        source => "source"
        target => "ActiveParticipantSource"
        remove_field => [ "source" ]
      }
    }
    if [destination-media] {
      xml {
        source => "destination-media"
        target => "ActiveParticipantDestinationMedia"
        remove_field => [ "destination-media" ]
      }
    }
    if [source-media] {
      xml {
        source => "source-media"
        target => "ActiveParticipantSourceMedia"
        remove_field => [ "source-media" ]
      }
    }
    if [study] {
      xml {
        source => "study"
        target => "ParticipantObjectStudy"
        remove_field => [ "study" ]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "logstash-%{type}-%{+YYYY.MM.dd}"
  }
}
